{
  "name": "grunt-twig-render",
  "description": "Render twig templates",
  "version": "1.0.0",
  "homepage": "https://github.com/sullinger/grunt-twig-render",
  "author": {
    "name": "Stefan Ullinger",
    "email": "stefan@slicemenice.de",
    "url": "http://www.slicemenice.de"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/sullinger/grunt-twig-render.git"
  },
  "bugs": {
    "url": "https://github.com/sullinger/grunt-twig-render/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/sullinger/grunt-twig-render/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "keywords": [
    "gruntplugin",
    "twig"
  ],
  "dependencies": {
    "twig": "~0.6.0"
  },
  "readme": "# grunt-twig-render\n\n[![Build Status](https://travis-ci.org/sullinger/grunt-twig-render.png?branch=master)](https://travis-ci.org/sullinger/grunt-twig-render)\n[![NPM version](https://badge.fury.io/js/grunt-twig-render.png)](http://badge.fury.io/js/grunt-twig-render)\n\n> Render twig templates\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-twig-render --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-twig-render');\n```\n\n## The \"twig_render\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `twig_render` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  twig_render: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      options: {\n        // Target specific options go here\n      },\n      files : [\n        {\n          data: // Path to JSON file, or POJO\n          template: // Path to template file\n          dest: // Path to output destination here\n        }\n      ]\n    },\n  },\n});\n```\n\n**Note:** The `files` parameter _must_ be an array, and _must_ conform to the format specified above. Each object in the file array represents _one_ rendered template.\n\n#### Examples:\n\n```js\nfiles: [\n  {\n    data: \"path/to/data/file.json\",\n    template: \"path/to/template.twig\",\n    dest: \"file/to/output.html\"\n  }\n]\n```\n\n```js\nfiles: [\n  {\n    data: { \n      greeting: \"Hello\",\n      target: \"world\"\n    },\n    template: \"path/to/template.twig\",\n    dest: \"file/to/output.html\"\n  }\n]\n```\n\n### Options\n\n#### options.extensions\nType: `Array`  \nDefault value: `[]`\n\nCan be an array of functions that extend TwigJS.\n\n##### Example 1: Filter Extension\n\n```js\noptions:\n{\n  extensions:\n  [\n  \n    // Usage: {{ [1, 2, 3]|fooJoin(' | ') }}\n    // Output: 1 | 2 | 3\n\n    function(Twig)\n    {\n      Twig.exports.extendFilter( \"fooJoin\", function(value, params)\n      {\n        if (value === undefined || value === null)\n        {\n          return;\n        }\n\n        var join_str = \"\",\n            output = [],\n            keyset = null;\n\n        if (params && params[0])\n        {\n          join_str = params[0];\n        }\n              \n        if (value instanceof Array)\n        {\n          output = value;\n        }\n        else\n        {\n          keyset = value._keys || Object.keys(value);\n                  \n          Twig.forEach(keyset, function(key)\n          {\n            if (key === \"_keys\")\n            {\n              return; // Ignore the _keys property\n            }\n                    \n            if (value.hasOwnProperty(key))\n            {\n              output.push(value[key]);\n            }\n          });\n        }\n              \n        return output.join(join_str);\n      });\n    }\n            \n  ]\n}\n```\n\n##### Example 2: Function Extension\n\n```js\noptions:\n{\n  extensions:\n  [\n  \n    // Usage:\n    //   {% for i in 1..3 %}\n    //   {{ fooCycle(['odd', 'even'], i) }}\n    //   {% endfor %}\n    \n    // Output:\n    //   even\n    //   odd\n    //   even\n\n    function(Twig)\n    {\n      Twig.exports.extendFunction( \"fooCycle\", function(arr, i)\n      {\n        var pos = i % arr.length;\n        return arr[pos];\n      });\n    }\n            \n  ]\n}\n```\n\n##### Example 3: Tag Extension\n\n```js\noptions:\n{\n  extensions:\n  [\n  \n    // Usage:\n    //   {% fooSpaceless %}<div>\n    //   <b>b</b>   <i>i</i>\n    //   </div>{% endFooSpaceless %}\n    \n    // Output:\n    //   <div><b>b</b><i>i</i></div>\n    \n\n    function(Twig)\n    {\n      Twig.exports.extendTag(\n      {\n        type: \"fooSpaceless\",\n        regex: /^fooSpaceless$/,\n        next: [\n          \"endFooSpaceless\"\n        ],\n        open: true,\n\n        // Parse the html and return it without any spaces between tags\n        parse: function (token, context, chain)\n        {\n          // Parse the output without any filter\n          var unfiltered = Twig.parse.apply(this, [token.output, context]),\n\n          // A regular expression to find closing and opening tags with spaces between them\n          rBetweenTagSpaces = />\\s+</g,\n                  \n          // Replace all space between closing and opening html tags\n          output = unfiltered.replace(rBetweenTagSpaces,'><').trim();\n\n          return {\n            chain: chain,\n            output: output\n          };\n        }\n      });\n    },\n\n    function(Twig)\n    {\n      Twig.exports.extendTag(\n      {\n        type: \"endFooSpaceless\",\n        regex: /^endFooSpaceless$/,\n        next: [ ],\n        open: false\n      });\n    }\n            \n  ]\n}\n```\n\n## Release History\n\n**Note:** Still under active development with no official release, use at your own risk.\n\n__1.0.0__\n\n  * Rechecked code. Seems to be fine â€“ releasing version 1.0.0.\n\n__0.3.1__\n\n  * Updated version string.\n\n__0.3.0__\n\n  * Added option to extend TwigJS functionality (filters, functions, tags).\n\n__0.2.0__\n\n  * Added basic tests.\n\n__0.1.0__\n\n  * Defined twig_render task.",
  "readmeFilename": "README.md",
  "_id": "grunt-twig-render@1.0.0",
  "_from": "grunt-twig-render@*"
}
